type Query {
    getTestimonials (
        currentPage: Int = 1 @doc(description: "Specifies which page of results to return. The default value is 1."),
        pageSize: Int = 6 @doc(description: "Specifies the maximum number of results to return at once. This attribute is optional."),
    ): Testimonials
    @resolver(class: "Swissup\\Testimonials\\Model\\Resolver\\Testimonials") @doc(description: ".")
    @cache(cacheIdentity: "Swissup\\Testimonials\\Model\\Resolver\\Testimonials\\Identity")
}

type Testimonials @doc(description: "The Products object is the top-level object returned in a product search.") {
    items: [TestimonialInterface] @doc(description: "An array of products that match the specified search criteria.")
    page_info: SearchResultPageInfo @doc(description: "An object that includes the page_info and currentPage values specified in the query.")
    total_count: Int @doc(description: "The number of products returned.")
}

type Testimonial implements TestimonialInterface @doc(description: "") {
}

interface TestimonialInterface @typeResolver(class: "Swissup\\Testimonials\\Model\\Resolver\\TestimonialTypeResolver") @doc(description: "") {
    testimonial_id: ID @doc(description: "")
    status: ID @doc(description: "")
    date: String @doc(description: "")
    name: String @doc(description: "")
    email: String @doc(description: "")
    message: String @doc(description: "")
    company: String @doc(description: "")
    website: String @doc(description: "")
    twitter: String @doc(description: "")
    facebook: String @doc(description: "")
    image: String @doc(description: "URL") @resolver(class: "\\Swissup\\Testimonials\\Model\\Resolver\\Testimonials\\ImageUrl")
    rating: Int @doc(description: "")
    widget: Boolean @doc(description: "")
}
